/*
Copyright The KCP Authors.

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
*/

// Code generated by lister-gen-v0.32. DO NOT EDIT.

package v1

import (
	labels "k8s.io/apimachinery/pkg/labels"
	listers "k8s.io/client-go/listers"
	cache "k8s.io/client-go/tools/cache"

	examplev1 "acme.corp/pkg/apis/example/v1"
)

// WithoutVerbTypeLister helps list WithoutVerbTypes.
// All objects returned here must be treated as read-only.
type WithoutVerbTypeLister interface {
	// List lists all WithoutVerbTypes in the indexer.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*examplev1.WithoutVerbType, err error)
	// WithoutVerbTypes returns an object that can list and get WithoutVerbTypes.
	WithoutVerbTypes(namespace string) WithoutVerbTypeNamespaceLister
	WithoutVerbTypeListerExpansion
}

// withoutVerbTypeLister implements the WithoutVerbTypeLister interface.
type withoutVerbTypeLister struct {
	listers.ResourceIndexer[*examplev1.WithoutVerbType]
}

// NewWithoutVerbTypeLister returns a new WithoutVerbTypeLister.
func NewWithoutVerbTypeLister(indexer cache.Indexer) WithoutVerbTypeLister {
	return &withoutVerbTypeLister{listers.New[*examplev1.WithoutVerbType](indexer, examplev1.Resource("withoutverbtype"))}
}

// WithoutVerbTypes returns an object that can list and get WithoutVerbTypes.
func (s *withoutVerbTypeLister) WithoutVerbTypes(namespace string) WithoutVerbTypeNamespaceLister {
	return withoutVerbTypeNamespaceLister{listers.NewNamespaced[*examplev1.WithoutVerbType](s.ResourceIndexer, namespace)}
}

// WithoutVerbTypeNamespaceLister helps list and get WithoutVerbTypes.
// All objects returned here must be treated as read-only.
type WithoutVerbTypeNamespaceLister interface {
	// List lists all WithoutVerbTypes in the indexer for a given namespace.
	// Objects returned here must be treated as read-only.
	List(selector labels.Selector) (ret []*examplev1.WithoutVerbType, err error)
	// Get retrieves the WithoutVerbType from the indexer for a given namespace and name.
	// Objects returned here must be treated as read-only.
	Get(name string) (*examplev1.WithoutVerbType, error)
	WithoutVerbTypeNamespaceListerExpansion
}

// withoutVerbTypeNamespaceLister implements the WithoutVerbTypeNamespaceLister
// interface.
type withoutVerbTypeNamespaceLister struct {
	listers.ResourceIndexer[*examplev1.WithoutVerbType]
}
